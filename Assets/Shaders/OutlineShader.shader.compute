Shader "Custom/OutlineShader"
{
    Properties
    {
        _OutlineColor ("Outline Color", Color) = (0,0,0,1)
        _OutlineWidth ("Outline Width", Range (0.0, 0.1)) = 0.005
    }
    SubShader
    {
        Tags { "Queue" = "Overlay" }
        ZWrite Off
        ZTest Always
        Cull Off
        Lighting Off
        Blend SrcAlpha OneMinusSrcAlpha
        Pass
        {
            Name "OUTLINE"
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct appdata_t
            {
                float4 vertex : POSITION;
            };

            struct v2f
            {
                float4 pos : POSITION;
            };

            float _OutlineWidth;
            
            v2f vert(appdata_t v)
            {
                v2f o;
                o.pos = UnityObjectToClipPos(v.vertex);

                float4 offset = o.pos;
                offset.xy += normalize(mul((float2x2)unity_ObjectToWorld, _OutlineWidth * _OutlineWidth * (_ProjectionParams.x, _ProjectionParams.y)));
                o.pos = UnityObjectToClipPos(offset);
                
                return o;
            }

            fixed4 _OutlineColor;

            half4 frag(v2f i) : SV_Target
            {
                return _OutlineColor;
            }
            ENDCG
        }
    }
}
